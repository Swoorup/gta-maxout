#include "../StdInc.h"

#pragma once

#pragma pack(push, 1)
class CPed {
public:
    CPhysical __parent;
    char gap_120[44];
    char field_14C;
    char field_14D;
    char field_14E;
    char m_field_14F;
    char field_150;
    char flags;
    char field_152;
    char field_153;
    char field_154;
    char field_155;
    char field_156;
    char field_157;
    char field_158;
    char gap_159[3];
    char field_15C;
    char gap_15D[3];
    char reference;
    char gap_161[3];
    int objective;
    int field_168;
    CEntity *field_16C;
    CPed *targetEntity;
    char gap_174[12];
    int field_180;
    CEntity *damageEntity;
    int field_188;
    int threatPlayer;
    int field_190;
    int field_194;
    int field_198;
    int field_19C;
    int field_1A0;
    int field_1A4;
    int field_1A8;
    char gap_1AC[35];
    char field_1CF;
    char field_1D0;
    char gap_1D1[31];
    int field_1F0;
    int field_1F4;
    int field_1F8;
    int field_1FC;
    int field_200;
    int field_204;
    int field_208;
    int field_20C;
    CPedIK pedIK;
    int field_238;
    int field_23C;
    int field_240;
    int current_status;
    int field_248;
    int field_24C;
    int field_250;
    int field_254;
    int animationID;
    int animationTime;
    CPathNode *ppPathNodes[8];
    WORD pPedIntermediateNodes;
    __int16 nIntermediateSteps;
    int field_284;
    int field_288;
    int field_28C;
    char field_290;
    char gap_291[159];
    int field_330;
    char bytePathHeadDirection;
    char gap_335[3];
    CPathNode *pCurrentPedNode;
    CPathNode *m_pNextNode;
    float targetX;
    float targety;
    float targetZ;
    int field_34C;
    int field_350;
    float health;
    float armour;
    char gap_35C[4];
    __int16 field_360;
    __int16 field_362;
    __int16 field_364;
    __int16 field_366;
    char gap_368[4];
    int field_36C;
    int field_370;
    float field_374;
    float field_378;
    float headingChangeRate;
    __int16 field_380;
    __int16 field_382;
    int field_384;
    int field_388;
    int field_38C;
    int field_390;
    int field_394;
    CVector m_vecTargetPath;
    void *field_3A4;
    CVehicle *pVehicle;
    char inVehicle;
    char gap_3AD[3];
    float field_3B0;
    int field_3B4;
    char gap_3B8[4];
    int field_3BC;
    int field_3C0;
    char field_3C4;
    char field_3C5;
    __int16 field_3C6;
    char gap_3C8[4];
    int field_3CC;
    int field_3D0;
    int pedType;
    void *pedStatsPtr;
    int field_3DC;
    int field_3E0;
    void *field_3E4;
    int field_3E8;
    int field_3EC;
    char gap_3F0[4];
    int field_3F4;
    int field_3F8;
    char field_3FC;
    char gap_3FD[3];
    int field_400;
    int field_404;
    CWeaponSlot weaponSlots[10];
    int field_4F8;
    int currentWeaponId;
    int currentWeaponAmmo;
    char currentWeapon;
    char field_505;
    char weaponAccuracy;
    char gap_507[1];
    int field_508;
    char field_50C;
    char gap_50D[6];
    char field_513;
    int field_514;
    int field_518;
    char gap_51C[8];
    int fire;
    int field_528;
    float field_52C;
    int field_530;
    int field_534;
    int field_538;
    int field_53C;
    int field_540;
    int field_544;
    int field_548;
    int field_54C;
    float field_550;
    int field_554;
    int field_558;
    int ClosestPedsTimer;
    int field_560;
    int field_564;
    char field_568;
    char bleeding;
    char field_56A;
    char gap_56B[1];
    void *closestPeds[10];
    __int16 numberOfPeds;
    __int16 money;
    int lastDamageType;
    int lastDamageEntity;
    int field_5A0;
    char gap_5A4[20];
    int field_5B8;
    int field_5BC;
    int field_5C0;
    int field_5C4;
    char gap_5C8[8];
    int field_5D0;
    int field_5D4;
    __int16 field_5D8;
    __int16 field_5DA;
    char muted;
    char gap_5DD[3];
    int field_5E0;
    int field_5E4;
    int field_5E8;
    int field_5EC;
    int field_5F0;
    bool __thiscall FindBestCoordsFromNodes(float fUnusedX, float fUnusedY, float fUnusedZ, CVector* vecBestCoords);
};
#pragma pack(pop)